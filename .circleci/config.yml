version: 2.1

parameters:
  branch_name:
    type: string
    default: "issue-12809"

jobs:
  generate-check-regression-report:
    parameters:
      branch_name:
        description: "branch name to test on"
        type: string
      config_file:
        description: "branch name to test on"
        type: string
    docker:
      - image: checkstyle/jdk-11-groovy-git-mvn:11.0.13__3.0.9__2.25.1__3.6.3
    resource_class: large
    environment:
      MAVEN_OPTS: -Xmx4096m
      JAVA_OPTS: -Xmx4096m
      CHECKSTYLE_DIRECTORY: checkstyle
      PATCH_BRANCH: << parameters.branch_name >>
      CONFIG_FILE: << parameters.config_file >>

    steps:
        - checkout
        - run:
            name: Clone checkstyle repo
            command: |
              git clone https://github.com/nrmancuso/checkstyle.git
              cd checkstyle
              git fetch --all
              git checkout $PATCH_BRANCH
            working_directory: ~/project
        - run:
            name: Clone contribution repo
            command: git clone https://github.com/checkstyle/contribution.git
            working_directory: ~/project
        - run: ls
        - run:
            name: Generate regression report
            command: .circleci/scripts/generate-regression-report.sh
            working_directory: ~/project
        - run:
            command: |
              ls -lRt
              find . -name "index.html"
        - run:
            name: Copy report to directory
            command: |
              REPORT_DIR=$(echo $CONFIG_FILE | cut -d'.' -f1)
              mkdir -p workspace/$REPORT_DIR
              cp -r contribution/checkstyle-tester/reports/diff workspace/$REPORT_DIR/
              ls -lRt workspace/$REPORT_DIR
        - persist_to_workspace:
            root: ~/project
            paths:
              - workspace

  publish-reports:
    docker:
      - image: cimg/base:stable
    resource_class: small

    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: List reports to publish
          command: ls -lRt workspace
      - store_artifacts:
          path: workspace

#  generate-antlr-regression-report:
#    docker:
#      - image: checkstyle/jdk-11-groovy-git-mvn
#    resource_class: large

workflows:
  check-regression-report:
    when: << pipeline.parameters.branch_name >>
    jobs:
      - generate-check-regression-report:
          matrix:
            parameters:
              config_file: [
                "test.xml",
                "test1.xml"
              ]
              branch_name: [ << pipeline.parameters.branch_name >> ]
      - publish-reports:
            requires:
                - generate-check-regression-report

